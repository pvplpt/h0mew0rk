/* Задание 3. Реализация симуляции игры «Рыбалка»

Что нужно сделать
Реализуйте простую симуляцию игры в рыбалку. В исходном текстовом файле реки
(river.txt) задаётся список из видов рыб, которые можно в ней поймать. Рыбок
может быть сколько угодно, разных видов. Виды при этом могут повторяться. В
начале программы пользователь указывает, какую именно рыбу он сейчас будет
ловить — вид этой рыбы. После этого из первого файла друг за другом
осуществляется чтение его содержимого, вид за видом. Если на отдельных шагах вид
совпал с указанным пользователем, в выходной файл basket.txt (корзинка)
записывается этот вид. В конце программы показывается, сколько было поймано рыб
за текущую ловлю. Программу можно запускать несколько раз, при этом уже
пойманные рыбы должны сохраняться в файле-корзинке. Пример содержания исходного
файла

sunfish
shad
carp
bass
bullhead
carp
walleye
catfish
carp

Что оценивается
Корректность работы программы симуляции игры в рыбалку. Пойманные рыбы должны
записываться в выходной файл.
*/

#include <fstream>
#include <iostream>

int main(int argc, char const *argv[]) {
    // Приветствие
    std::cout << "Продвинутые темы и техники C++\n";
    std::cout << "Урок 2. Запись в файлы\n";
    std::cout << "Задание 3. Реализация симуляции игры «Рыбалка»\n\n";

    // Ввод
    std::string fish;
    std::cout << "Введите какую рыбу будете ловить: ";
    std::cin >> fish;

    // Ловля из реки в корзину.
    std::ifstream river("river.txt");
    std::ofstream basket("basket.txt", std::ios::app);
    std::string riverFish;
    int countFish = 0;
    while (!river.eof()) {
        river >> riverFish;
        if (riverFish == fish) {
            ++countFish;
            basket << riverFish << std::endl;
        }
    }

    // Вывод
    std::cout << "\nЗа текущую ловлю было поймано рыб: " << countFish
              << std::endl;
    return 0;
}
