/* Задание 1. Симулятор проведения операций

Что нужно сделать
Реализуйте простой симулятор проведения медицинской операции у пациента.
Пользователь выступает в роли хирурга, который запрашивает инструменты у
ассистента и применяет их сообразно ситуации. Пользователь взаимодействует с
программой с помощью команд. Команды не имеют сложной встроенной логики: они
просто принимают нужные данные в качестве аргументов и выводят сообщения в
консоль о выполнении. Данные команд — это одна или две двумерные точки в формате
double с координатами X и Y соответственно.
Команда scalpel — принимает на вход две двумерные координаты начала и конца
разреза или линии отсечения. При выполнении в консоль выводится сообщение о том,
что был сделан разрез между введёнными координатами.
Команда hemostat принимает на вход одну точку, в которой требуется сделать
зажим, о чём также сообщает в консоль.
Команда tweezers — пинцет, как и зажим, принимает одну точку для применения.
Сообщение об этом выводится в консоль.
Команда suture — хирургическая игла, которая делает шов между двумя указанными
точками.
Операция всегда начинается с команды scalpel и заканчивается командой
suture. Для окончания работы программы их параметры-точки должны совпасть.
Программу требуется реализовать именно с помощью одного заголовочного файла и
одного файла с исходным кодом (CPP). В заголовочном файле должны находиться
функции-инструменты. В основном файле — основная логика программы, обработка
ввода пользователя.

Советы и рекомендации
• Создайте структуру с типом двумерной координаты (точки) вместе с набором
функций для ввода этой координаты из консоли, её вывода в консоль и сравнения на
предмет равенства. Для этих целей удобнее всего создать ещё один заголовочный
файл.
• Обратите внимание на порядок команд.
• Заголовочные файлы с расширением .h следует расположить в папке include. Файлы
исходного кода с расширением .cpp — в папке src.

Что оценивается
• Все команды вводятся пользователем через стандартный ввод.
• Программа и CMake-файл конфигурации проекта работают корректно.

Как отправить работу на проверку
На проверку пришлите архив, содержащий, помимо CPP- и H-файлов, файлы настройки
проекта в среде CMake(CMakeLists.txt).*/

#include "point.h"
#include "surgicalTools.h"
#include <iostream>
#include <vector>

int main(int argc, char const *argv[]) {
    // Приветствие
    std::cout << "Продвинутые темы и техники C++\n";
    std::cout << "Урок 7. Структура проекта\n";
    std::cout << "Задание 1. Симулятор проведения операций\n\n";

    // не все команды доступны пока нет разреза
    bool isIncision = false;
    point startCut, endCut;
    std::string command;
    while (true) {
        std::cout << "\nСписок команд:\nscalpel\nhemostat\ntweezers\nsuture\n";
        std::cout << "Введите команду: ";
        std::cin >> command;
        if (command == "scalpel") {
            if (isIncision) {
                std::cout << "\nРазрез уже сделан.\n";
            } else {
                inputPoint("Введите координаты начала разреза x и y: ",
                           startCut);
                inputPoint("Введите координаты конца разреза x и y: ", endCut);
                scalpel(startCut, endCut);
                isIncision = true;
            }
        } else if (command == "hemostat" && isIncision) {
            point pHemostat;
            inputPoint("Введите координаты для зажима x и y: ", pHemostat);
            hemostat(pHemostat);
        } else if (command == "tweezers" && isIncision) {
            point pTweezers;
            inputPoint("Введите координаты для пинцета x и y: ", pTweezers);
            tweezers(pTweezers);
        } else if (command == "suture" && isIncision) {
            point startSeam, endSeam;
            inputPoint("Введите координаты начала шва x и y:", startSeam);
            inputPoint("Введите координаты конца шва x и y: ", endSeam);
            suture(startSeam, endSeam);

            // шить можно от начала или конца разреза
            if ((equalityPoint(startCut, startSeam) &&
                 equalityPoint(endCut, endSeam)) ||
                (equalityPoint(startCut, endSeam) &&
                 equalityPoint(endCut, startSeam))) {
                std::cout << "\nОперация завершена.\n";
                break;
            }
        } else {
            std::cout << "\nОшибка ввода команды.\n";
            if (!isIncision) {
                std::cout << "Операция всегда начинается с команды scalpel\n";
            }
        }
    }

    return 0;
}
