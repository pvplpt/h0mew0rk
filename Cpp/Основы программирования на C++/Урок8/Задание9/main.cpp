/* Задание 9. Яйца* (дополнительное задание)

Что нужно сделать
В рамках программы колонизации Марса компания «Спейс Инжиниринг» вывела особую
породу черепах, которые должны размножаться, откладывая яйца в марсианском
грунте. Откладывать яйца слишком близко к поверхности опасно из-за радиации, а
слишком глубоко опасно из-за давления грунта и недостатка кислорода. Вообще,
факторов много, но специалисты проделали большую работу и предположили, что
уровень опасности для черепашьих яиц рассчитывается по формуле D = x^3 − 3x^2 −
12x + 10, где x — глубина кладки в метрах, а D — уровень опасности в условных
единицах. Для тестирования гипотезы нужно взять пробу грунта на безопасной,
согласно формуле, глубине. Напишите программу, находящую такое значение глубины
х, при котором уровень опасности наиболее близок к нулю, учитывая допустимое
отклонение. На вход программе подаётся максимально допустимое отклонение уровня
опасности от нуля, а программа должна рассчитать приблизительное значение х,
удовлетворяющее этому отклонению. Известно, что глубина точно больше нуля и
меньше четырёх метров. Обеспечьте контроль ввода.

Пример выполнения
Введите максимально допустимый уровень опасности: 0,01
Вывод:
Приблизительная глубина безопасной кладки: 0,732422 метра

Рекомендации по выполнению
• Отрицательный уровень опасности — это тоже плохо. Нужно найти наиболее близкий
к нулю уровень опасности.
• Здесь не обязательно считать корни кубического
уравнения. Достаточно найти решение на отрезке от 0 до 4.

Что оценивается
Для поиска решения не используется полный перебор.
*/

#include <cmath>
#include <iostream>

int main() {
  // Приветствие
  std::cout << "Основы программирования на С++\n";
  std::cout << "Урок 8. Числа с плавающей запятой. Математические вычисления\n";
  std::cout << "Практическая работа\n";
  std::cout << "Задание 9. Яйца* (дополнительное задание)\n\n";

  //Ввод
  float permissibleDangerLevel;
  std::cout << "Введите максимально допустимый уровень опасности: ";
  std::cin >> permissibleDangerLevel;
  if (permissibleDangerLevel <= 0) {
    std::cout << "Ошибка ввода положительных чисел.\n";
    return 1;
  }

  // Решение
  float minDepth = 0.f;
  float maxDepth = 4.f;
  float masonryDepth;
  float dangerLevel;
  std::string a;
  do {
    masonryDepth = minDepth + (maxDepth - minDepth) / 2.f;
    dangerLevel = std::pow(masonryDepth, 3) - 3.f * pow(masonryDepth, 2) -
                  12.f * masonryDepth + 10;
    if (dangerLevel < 0) {
      maxDepth = masonryDepth;
    } else {
      minDepth = masonryDepth;
    }
  } while (std::fabs(dangerLevel) > permissibleDangerLevel);

  //Вывод
  std::cout << "Приблизительная глубина безопасной кладки: " << masonryDepth
            << " м\n";
  return 0;
}