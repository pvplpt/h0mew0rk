/* Задание 3. Игрушечная история

Что нужно сделать
Вы решили открыть бизнес по производству игровых деревянных кубиков для детей.
Вы узнали, что лучше всего продаются кубики со стороной 5 см в наборах по
несколько штук, причём кубиков в наборе должно быть достаточно, чтобы сложить из
них один большой куб. Для изготовления кубиков к вам в мастерскую поступают
деревянные бруски в форме прямоугольных параллелепипедов любых размеров.

Для оптимизации бизнес-процессов напишите программу, которая по заданным
размерам исходного бруска определяет, сколько кубиков из него можно изготовить,
можно ли из них составить набор для продажи и если можно, то максимальное число
кубиков в этом наборе. Все кубики должны быть из цельного дерева без
использования клея. Размеры бруска — вещественные числа. Обеспечьте контроль
ввода.

Например:
Из бруска 20x35x5 можно изготовить 28 кубиков.

Из 28 кубиков можно собрать набор из 27 кубиков.

Пример выполнения
Введите размеры бруска:
X: 5
Y: 35,76
Z: 35,05
Вывод:
Из этого бруска можно изготовить 49 кубиков.
Из них можно составить набор из 27 кубиков.

Рекомендации по выполнению
• Кубики изготавливаются только цельными, не из нескольких частей бруска.
Минимальный размер бруска — 5x5x5 см. Подумайте как проще разбить брусок на
такие кубики.
• Минимальный размер набора — 2x2x2 = 8 кубиков.

Что оценивается
• Правильно считается количество кубиков, которое можно получить из бруска.
• Количество кубиков в наборе не превышает количество кубиков, полученное из
бруска.
*/

#include <cmath>
#include <iostream>

int main() {
  // Приветствие
  std::cout << "Основы программирования на С++\n";
  std::cout << "Урок 8. Числа с плавающей запятой. Математические вычисления\n";
  std::cout << "Практическая работа\n";
  std::cout << "Задание 3. Игрушечная история\n\n";

  // Ввод
  float x;
  float y;
  float z;
  std::cout << "Введите размеры бруска:\n";
  std::cout << "X: ";
  std::cin >> x;
  std::cout << "Y: ";
  std::cin >> y;
  std::cout << "Z: ";
  std::cin >> z;
  if (x <= 0 || y <= 0 || z <= 0) {
    std::cout << "Ошибка ввода положительных чисел.";
    return 1;
  }

  // Решение
  if (x < 5.f || y < 5.f || z < 5.f) {
    std::cout << "Без клея кубики 5х5х5 не получить.\n";
  } else {
    int countX = (int)x / 5;
    int countY = (int)y / 5;
    int countZ = (int)z / 5;
    int allCubes = countX * countY * countZ;
    std::cout << "Из этого бруска можно изготовить " << allCubes
              << " кубиков.\n";
    if (allCubes >= 8) {
      int sizeCube = (int)std::cbrt((float)allCubes);

      int setCubes = sizeCube * sizeCube * sizeCube;
      std::cout << "Из них можно составить набор из " << setCubes
                << " кубиков.\n";
    } else {
      std::cout << "Мало кубиков для минимального набора 2х2х2\n";
    }
  }
}