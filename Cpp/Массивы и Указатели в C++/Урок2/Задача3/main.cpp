/* Задача 3

Что нужно сделать
Вам дали задание разработать хранилище для целочисленных значений во
встраиваемой операционной системе. Такие системы работают в большей части
техники, которая нас окружает: автомобилях, стиральных машинах, микроволновках,
холодильниках. Только вот незадача: объём памяти этой системы очень небольшой,
поэтому в хранилище не может находиться более 20 элементов. В хранилище,
являющееся вектором, с клавиатуры приходят целочисленные значения и помещаются
один за другим. При вводе «−1» с клавиатуры необходимо вывести всё содержимое
хранилища (20 или менее элементов). При выводе элементы должны быть в том
порядке, в котором они добавлялись. Попробуйте написать максимально
оптимизированное решение этой задачи, чтобы совершалось как можно меньше
расширений и перемещений элементов внутри вектора. Чтобы задать размера вектора
равным 20, используйте:

std::vector<int> db(20);
// ^ Задаём размер вектора при создании


Пример выполнения:

input number: 1
input number: 2
input number: 3
…
input number: 19
input number: 20
input number: -1
output: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
input number: 21
input number: 22
input number: 23
input number: -1
output: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23


Рекомендации по выполнению
Посмотрите, как работает кольцевой буфер. Этот алгоритм поможет быстрее найти
решение.

Что оценивается
• Размер вектора не превышает 20 элементов.
• Нет изменений в размере вектора (это выполняется, если вы выбрали верный
алгоритм решения).
*/

#include <iostream>
#include <vector>

int main() {
  // Приветствие
  std::cout << "Массивы и Указатели в C++\n";
  std::cout << "Урок 2. Знакомство с std::vector v2\n";
  std::cout << "Практическая работа\n";
  std::cout << "Задача 3\n\n";

  std::vector<int> db(20);
  int start = 0;
  int length = 0;
  bool run = true;
  while (run) {
    std::cout << "Введите целое число(-1 - просмотр содержимого):";
    int number;
    std::cin >> number;
    if (number != -1) {
      int i = (start + length) % 20;
      db[i] = number;
      if (length < 20) {
        length++;
      } else {
        length = 20;
        start = (start + 1) % 20;
      }

    } else {
      std::cout << "Вывод:";
      for (int j = 0; j < length; j++) {
        std::cout << " " << db[(start + j) % 20];
      }
      std::cout << std::endl;
      std::cout << "Продолжим ввод целых чисел? (Y/n) ";
      std::string answer;
      std::cin >> answer;
      if (answer == "n") {
        run = false;
      }
    }
  }
  std::cout << "\nДо новых встреч!\n";
  std::cout << "Завершение работы приложения.\n";
  return 0;
}