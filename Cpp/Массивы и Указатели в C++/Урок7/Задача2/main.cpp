/* Задача 2

Что нужно сделать:
Кролик сидит на нулевой ступеньке большой лестницы. Он может прыгать на одну или
более ступенек вверх, но не далее чем на k. Кролик хочет допрыгать до n-й
ступеньки, но может сделать это большим количеством способов. Напишите
рекурсивную функцию, которая принимает число n типа int и число k — максимальную
длину прыжка, а возвращает количество способов, которым кролик может доскакать
до n-й ступеньки. В функции для аргумента “максимальная длина прыжка” задать
значение, по умолчанию равное 3.

Пример:
Ввод: 3, 2
Вывод: 3
Пояснение: (1,2), (2,1), (1,1,1)

Чек-лист для проверки задачи:
• Функция принимает корректные типы данных, тип возвращаемого значения — int.
• Функция не использует библиотек кроме <iostream>.
• Функция рекурсивная.
• Функция содержит значение по умолчанию.
*/

#include <iostream>

int jump(int n, int k = 3) {
    if (n == 0) {
        return 1;
    }

    int ways = 0;
    for (int i = 1; i <= k && n - i >= 0; i++) {
        ways += jump(n - i, k);
    }
    return ways;
}

int main(int argc, char const *argv[]) {
    std::cout << "Массивы и Указатели в C++\n";
    std::cout << "Урок 7. Расширенная работа с функциями\n";
    std::cout << "Практическая работа\n";
    std::cout << "Задача 2\n\n";

    std::cout << "3, 2 -> " << jump(3, 2) << std::endl;
    std::cout << "10, 3 -> " << jump(10) << std::endl;
    return 0;
}
